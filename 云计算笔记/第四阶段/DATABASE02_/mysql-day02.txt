准备5台rhel7操作系统的虚拟机 配置如下
禁用SELinux  关闭防火墙  配置本地yum源
配置固定IP地址 依次是192.168.4.51/52/53/54/55
下载软件 ftp://172.40.50.117/softpackage/mysql/*  

linux系统的基本使用。  
rpm  
用户管理 
常用的安装启动查看  
会配置yum源   

Linux数据库管理  7天  
DBA（数据库管理员）  6K+ 
++++++++++++++++++++++++++++
课间休息
45分钟   10分钟    班长负责提醒下课。
 
早晚自习出勤：8:30   9:00
              19:00  21:00
        
自己  记 笔记  .txt文档  （知识点）

上课纪律？  看PPT？  案例？ 
++++++++++++++++++++++++++++++++
一、搭建数据库服务器？
二、数据库服务的基本使用？
三、MySQL数据类型？
四、管理表记录？
五、用户授权与权限撤销？
六、数据备份与恢复
七、MySQL主从同步？
八、数据读写分离？
九、MySQL优化？
十、MySQL集群？
+++++++++++++++++++++++++++++++++
一、搭建数据库服务器？
请阐述你架设数据库服务器的部署思路？

数据库服务器 是用来存储存储数据库。

5W 服务器品牌：联想  DELL  IBM  HP 
1 购买服务器（硬件配置 存储  CPU  内存）

2 安装操作系统：Linux  UNIX  Windows
                RHEL7  mariadb-server
                RHEL6  mysql-server

3 安装提供数据库服务的软件包
3.1 软件包的来源？
官网下载  使用系统安装光盘自带的

3.2 软件包的类型？ RPM   源码

3.3 提供数据库服务的软件有哪些？
mysql  mariadb  oracle  sql server db2

3.3 使用商业的还是开源 是否跨平台？

3.4 mysql 发展历史  特点  应用场景 版本
关系型数据库软件？
非系型数据库软件？
mangodb  memcached redis ( key values)

通常和网站服务一起使用 LAMP  LNMP
                        Apache Nginx

购物网站 游戏网站 论坛网站 金融网站
登录账户 （名 密码）
购物信息

3.5安装MySQL软件提供数据库服务？（51）
3.5.1 卸载系统自带的mariadb软件

]# tar -xf mysql-5.7.17-1.el7.x86_64.rpm-bundle.tar

3.5.2  安装软件包
]# rm -rf mysql-community-server-minimal-5.7.17-1.el7.x86_64.rpm

]# yum -y install perl-Data-Dumper perl-JSON

]# rpm  -Uvh  mysql-community-*.rpm

]# rpm  -qa | grep  -i mysql

3.6 启动服务
]# systemctl  start mysqld
]# systemctl  enable mysqld

3.7  与MySQL数据库服务相关的信息 ?
进程名  mysqld
默认端口号  3306
进程所有者和所属组 mysql/mysql
传输协议 TCP
默认主配置文件 /etc/my.cnf
默认数据库目录 /var/lib/mysql
日志文件文件 /var/log/mysqld.log

3.8 使用数据库管理员root用户初始密码连接数据库服务。
]# grep -i password /var/log/mysqld.log

]# mysql -uroot -p随机初始密码
mysql>
mysql> quit   //断开连接


3.8 设置数据库管理员root用户本机登录密码
mysql>  set global validate_password_policy=0;

mysql> set global validate_password_length=6;

mysql> alter user  root@"localhost" identified by "123456";
mysql> quit
]# mysql -uroot -p123456
mysql> show databases;

让配置永久生效
]# vim /etc/my.cnf
[mysqld]
validate_password_policy=0
validate_password_length=6
:wq
]# 
]# mysql -uroot -p123456
++++++++++++++++++++++++++++++++++++
练习:
在ip地址是192.168.4.52的主机运行mysql数据库服务，并设置数据库管理员本机登录的密码是abc123 
+++++++++++++++++++++++++++++++++++
二、数据库服务的基本使用？
2.1 把数据存储到数据库服务器上的过程？
1 连接数据库服务器
*不做授权的时候只允许数据库管理root用户在数据库本机连接数据库服务。

]#mysql  -hlocalhost  -uroot  -p123456
mysql> 

2 创建库(文件夹)
mysql> show databases;
mysql> create  database 库名;
mysql> system  ls /var/lib/mysql
mysql> select     database();
mysql> use 库名;
mysql> drop  库名;

3 建表（系统文件）
*表必须保存在库里。
mysql> use mysql;
mysql> show  tables;
mysql> desc  表名;

建表命令
create  table 库.表名(
字段名  类型(宽度) 约束条件，
字段名  类型(宽度) 约束条件，
.....
);

插入表记录
insert  into  库.表名  values(值列表);


查看表记录
mysql> select  *  from 库.表名；
mysql> select  * from  表名；
mysql> select  user,host from  user;


删除所有表记录
delete  from  库.表名；

删除表
drop  table  库.表名；


行（记录）
列（字段名）
把学生信息保存到系统文件里
touch  /root/student.txt
name   age   stu_id     sex
tom    19    nsd171101  boy

4 断开连接
mysql> quit
+++++++++++++++++++++++++++++++++++
mysql> create table gamedb.stu(
    -> name  char(10),
    -> age int(2)
    -> );
mysql> use  gamedb;
mysql> show tables;
mysql> system  ls /var/lib/mysql/gamedb
mysql> desc  stu;
mysql> select  * from stu;
mysql> 
insert  into  stu  values("jim",21);
insert  into  stu  values("tom",19);
mysql> select  * from stu;
mysql> select  name from stu;
mysql> delete  from  stu;
mysql> drop  table  stu;
mysql> drop  database  gamedb;

管理数据库服务使用的是sql命令.
sql命令使用规则？
sql命令类型？ 
库名的命名规则？
+++++++++++++++++++++++++++++++++
三、MySQL数据类型？
字符类型 char   varchar   blob  text

数值类型  
存储整数（没有小数的数）要记住每种整数类型能够存储数值的范围
tinyint  smallint  MEDIUMINT int bigint

存储有小数点的数
单精度 float
双精度 double

日期时间类型 
year  date   time  datetime/timestamp

枚举类型  set(多选)  enum(单选) 



create database  db1;

create table db1.t1(
age  tinyint
);

create table db1.t2(
age  tinyint  unsigned
);

insert into  db1.t1 values(325);


整数.小数  总位数
103.77     5位

float(n,m)
n 表示总位数
m 表示小数位 位数

rust  double(7,2)
rust  float(7,2)
xxxxx.xx
99999.99
  0.00
-99999.99

create table db1.t3(
age  tinyint  unsigned,  //年龄
rust float(5,2),  //成绩
pay  float(7,2)   //工资
);

insert into  db1.t3 values(21,59.9,18000.23);

字符类型 
char 255字节        定常   
varchar 65532字节   变长 

大文本
blob  text

数字  字符  音频 视频  图片

C:\Users\Administrator\Desktop\提神曲/a.mp3

create table db1.t4(
name  char(3)  
);

create table db1.t5(
name  varchar(5)  
);


insert  into  t4  name("lucy");


t1      	t2
name	 	name    
char(10) 	varchar(3)
jim		jim
lucy		lucy
a  		a


create table db1.t7(
name  char(10),
age  tinyint  unsigned, 
rust float(5,2),  
pay  float(7,2)   
);

insert into db1.t7  values("zhangsan",21,112.23,20000);

数值类型的宽度是显示宽度，不能够限制给字段赋值的大小，字段值的大小由类型决定。
create  table  db1.t8 (
name char(3),
pay  int(1) zerofill
);

insert into  db1.t8 values("jim",10024);
name pay
jim   3

create  database db2;
create  table  db2.t1(
id  int(3) zerofill,
level  int(5) zerofill
);

insert into  db2.t1 values(7,7);
id      level
007     00007
insert into  db2.t1 values(13,13);
id      level
013     00013

create  table  db2.t2(
id  int(1) zerofill
);

create  table  db2.t3(
id  int(2) zerofill
);
insert into  db2.t3 values(1),(5),(21);


年    year    YYYY  2018
日期  date    YYYYMMDD  20181120
时间  time    HHMMSS    092148
日期时间类型  datetime  timestamp
		YYYYMMDDHHMMSS
		20180223092250
create  table db2.t4(
name  char(10),
s_year  year,
up_class  time,
birthday   date,
meetting   datetime
);
desc db2.t4;
insert into db2.t4 values("bob",1990,083000,20181020,20180930213000);
select  * from db2.t4;

使用时间函数获取时间给字段赋值。
year() month() day()  date()  time()
now()

insert into db2.t4 values("bob",year(now()),time(now()),date(20170112214538),now());

insert into db2.t4 values("jack",2156,time(now()),date(20170112214538),now());

记住类型的有效存储范围。

datetime 与 timestmap的区别？

create  table  db2.t5(
party   datetime,
meetting  timestamp
);
insert into db2.t5 values(now(),now());

insert into db2.t5 values(20151020152217,20171120161818);

insert into db2.t5(meetting)  values(20191120161818);

insert into db2.t5(party)  values(20161120161818);

使用2位数给year类型字段赋值？
01-69  20XX
70-99  19XX
00     0000

desc db2.t4;
insert into db2.t4 values("tom",53,083000,20181020,20180930213000);

insert into db2.t4 values("tom",81,083000,20181020,20180930213000);

枚举类型（字段的值在规定的范围内选择）
单选 enum(值列表)
多选 set(值列表)

create  table  db2.t6(
name char(10),
sex  enum("boy","girl","no"),
likes  set("it","film","game","music")
);

insert  into  db2.t6 values("bob","boy","it,game");

insert  into  db2.t6 values("lucy","woman","it,game,book");

insert  into  db2.t6 values("lucy",2,"it,game");

字段约束条件（限制如何的给字段赋值）


create  table  db2.t8(
name char(10) not  null ,
age  tinyint(2) unsigned not null default 19,
sex  enum("boy","girl","no") not null default "no",
likes  set("it","film","game","music") not  null default  "film,game"
);
insert into db2.t8(name) values("jerry");

insert into db2.t8 values("bob",21,"boy","it,music");


create  table  db2.t9(
name char(10) not  null  default "",

age  tinyint(2) unsigned not null default 19,

sex  enum("boy","girl","no") not null default "no",

likes  set("it","film","game","music") not  null default  "film,game"
);

insert into db2.t9(age,sex,likes) values(21,"boy","it,music");

修改表结构
alter  table  库.表  执行动作；

添加新字段 add
删除已有字段 drop
修改字段类型modify
修改字段名change

alter table  t6 add  email  varchar(30) not null default "stu@tedu.cn";


alter table  t6 add  age  tinyint(2) unsigned  default 21 after sex;


alter table  t6 add  stu_id  char(9) first;

alter table  t6 
add qq char(11) after age,
add tel char(11);
 
alter  table t6  modify  email char(50) not  null  default "yaya@163.com";

alter  table t6  modify age tinyint(2) unsigned  default 21  after name;

mysql> alter table   t6 
drop  likes,drop  stu_id;

alter table   t6  change  email mail char(30);


修改表名
alter  table  源表名  rename 新表名； 
mysql> alter table   t6 rename  stuinfo;

+++++++++++++++++++++++++++++++++++++
day02  
一 MySQL键值（key） 设置在字段上，约束如何给字段赋值。

普通索引 index     *
唯一索引 unique
主键     primary key   *
外键     foreign  key  *
全文索引 fulltext
++++++++++++++++++++++++
1.1 普通索引 index 的使用
1.1.1 什么是索引？相当于 "书的目录"
1.1.2 索引的优点与缺点？

优点: 加快查询记录的的速度。
缺点：占物理存储空间
      减慢写的速度
     （insert update delete）

100页
1-10 目录页(记录目录信息)
11-100 正文（书的内容）

1.1.3 索引使用规则？
1.1.4 创建索引字段

建表时创建索引字段
create  table  表名(
字段列表，
index(字段名)，
index(字段名)
);

create  table  db2.t10(
name char(10) not null,
age  tinyint(2) ,
sex  enum("boy","girl","no") ,
likes  set("it","film","game","music") ,
index(name),
index(sex)
);

把已有表中的字段设置为索引字段
create index 索引名称 on 表名(字段名);
create  index  name  on  stuinfo(name);


1.1.5 查看表中是否有索引字段
desc  表名; key ---> MUL

show  index  from  表名 ;
Index_type: BTREE //索引类型
            二叉树 hash  B+Tree 
            1-10
         1-5   6-10

1.1.6 删除索引
mysql> drop index  name on stuinfo;



select  * from stuinfo where  name="zhangsan";
++++++++++++++++++++++++++++++++
主键     primary key 的使用
1.1 使用规则？

建表时创建主键字段
create  table t11(
name char(10),
age int(2),
sex  enum("b","g"),
primary key(name)
);

create  table t12(
name char(10) primary key, 
age  int(2),
sex  enum("b","g")
);

删除主键？
alter  table  库.表  drop primary key;


把已有表中的字段设置为主键字段。
alter  table  库.表  add primary key(字段);


创建复合主键？复合主键字段的值不允许同时相同。

PRI       PRI
cip       port  status
1.1.1.1   21    deny
2.1.1.1   21    deny
2.1.1.1   22    allow

create  table  db2.t13(
cip  char(15),
port smallint(2),
status enum("deny","allow"),
primary key(cip,port)
);
insert into  t13 values("1.1.1.1",21,"deny");

insert into  t13 values("1.1.1.1",22,"allow");

primary key通常与auto_increment连用。
                 自动增长 i++
                          i=0
                           i++ i=i+1


create table db2.t14(
id   int(2) zerofill primary key  auto_increment,

name char(10),

age  tinyint(2) unsigned,

sex  enum("boy","girl"),

likes set("film","book","it","football"),

index(name)
);

insert into t14(name,age,sex,likes)values("bob",21,"boy","film,game,football");

insert into t14values(13,"bob",21,"boy","film,book,football");
++++++++++++++++++++++++++++
外键  foreign  key  的使用
1 外键使用规则？

2 创建外键命令格式
create table  库.表1(
字段列表，
foreign  key(字段名) references 表2(字段名) on update cascade on delete cascade
)engine=innodb;


财务表 100
姓名   学号	pay
bob   nsd171108  2w

create  table  cwb(
cw_id int(2) primary key auto_increment,
name  char(10),
pay float(7,2)
)engine=innodb;

insert into cwb(name,pay)values("bob",20000),("lucy",18000),("jack",16000);
select  * from cwb;


班级表  
姓名 学号         姓名 电话
bob  nsd171108

create table  bjb(
bj_id  int(2),
name  char(10),
foreign key(bj_id) references cwb(cw_id)
on update cascade on delete cascade
)engine=innodb;

show create table bjb;

insert into bjb values(7,"jerry");
insert into bjb values(1,"bob");

insert into cwb(cw_id,name,pay)values(7,"jerry",21000);

update  cwb set  cw_id=8 where cw_id=2;

delete from cwb where cw_id=3;

删除外键；
alter  table 库.表 drop  foreign key 外键名；


在已有表里添加外键字段。
alter  table bjb  add foreign key(bj_id) references cwb(cw_id)
on update cascade on delete cascade;
+++++++++++++++++++++++++++
二 MySQL存储引擎





四、管理表记录？
五、用户授权与权限撤销？
六、数据备份与恢复
七、MySQL主从同步？
八、数据读写分离？
九、MySQL优化？
十、MySQL集群？













       















      